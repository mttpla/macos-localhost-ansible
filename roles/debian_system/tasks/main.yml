---
- name: 'Configure hostname'
  ansible.builtin.hostname:
    name: '{{ config.hostname }}'
  become: true

- name: Update apt repo and cache on all Debian/Ubuntu boxes
  apt: update_cache=yes
    force_apt_get=yes
    cache_valid_time=3600

- name: Upgrade all packages on servers
  apt: upgrade=dist
    force_apt_get=yes

- name: Check if a reboot is needed on all servers
  register: reboot_required_file
  stat: path=/var/run/reboot-required get_md5=no

- name: Reboot the box if kernel updated
  reboot:
    msg: 'Reboot initiated by Ansible for kernel updates'
    connect_timeout: 5
    reboot_timeout: 300
    pre_reboot_delay: 0
    post_reboot_delay: 30
    test_command: uptime
  when: reboot_required_file.stat.exists

- name: set X11Forwarding in sshd_config
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^X11Forwarding'
    line: X11Forwarding yes
  notify: restart_ssh

- name: set X11DisplayOffset 10 in sshd_config
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^.X11DisplayOffset'
    line: X11DisplayOffset 10
  notify: restart_ssh

- name: set X11UseLocalhost no in sshd_config
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^.X11UseLocalhost'
    line: X11UseLocalhost no
  notify: restart_ssh

- name: add packages
  ansible.builtin.apt:
    name: '{{ item }}'
    state: present
  loop: '{{ config.packages }}'

- name: Add sudoer users
  ansible.builtin.user:
    name: '{{ item.value.username }}'
    password: '{{ item.value.password | password_hash("sha512") }}'
    groups: sudo
    append: yes
    shell: /bin/bash
    generate_ssh_key: yes
    ssh_key_bits: 2048
    ssh_key_file: .ssh/id_rsa
  loop: '{{ secret.sudoer_users | dict2items  }}'
